name: Create Release and Publish

on:
  push:
    branches: [main]

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: |
          npm install
          npm run test:ci
          npm run build
        env:
          AZURE_API_KEY: ${{ secrets.AZURE_API_KEY }}
          AZURE_API_ENDPOINT: ${{ secrets.AZURE_API_ENDPOINT }}
          CI: true
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            package.json
            README.md
            LICENSE

  release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.package-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if git ls-remote --exit-code --tags origin "v$VERSION"; then
            echo "Version v$VERSION already exists"
            exit 1
          fi
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          release_name: Release v${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: false

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      # Install dependencies
      - run: npm install --production

      # Publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish to GitHub Packages
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://npm.pkg.github.com"
      - run: |
          npm config set registry https://npm.pkg.github.com/
          npm config set @quail-ai:registry https://npm.pkg.github.com/
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
